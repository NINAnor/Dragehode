---
title: "Vektede populasjonsvekstrater"
editor: visual
lang: no
fontenc: iso-8859-1
---

For 친 oppsummere vekstratene p친 tvers av populasjoner brukte vi en vektet regresjon, en til-n칝rming som brukes i meta-analyser (춺random effects meta-analysis췉). Vi vektet popula-sjonsvekstratene per lokalitet med den overordnede populasjonsst칮rrelsen (i den gitte lokali-teten i det gitte 친ret), og et vektet gjennomsnitt ble deretter beregnet totalt (over alle populas-joner), per region og per naturtype.

Denne tiln칝rmingen gj칮r at vi kan vekte effekten av endringer i store populasjoner mer, mens endringer i sm친 populasjoner har mindre effekt p친 overordnede vekstrater. Populasjonsvekst-ratene gir dermed et representativt estimat p친 endringer i dragehodepopulasjonen innenfor regionen/naturtypen.

Populasjonsvekstraten er log-transformert. Det betyr at en vekstrate p친 0 indikerer en stabil populasjon, vekstrate \> 0 indikerer en populasjon i vekst og vekstrate \< 0 indikerer en populasjon i nedgang. Figurene viser vektet gjennomsnitt med 95 % konfidensintervall.

## plots only including the populations that also have plot data in 2023

## weight by area

As we can no longer estimate population size based on the quadrats we weight the regressions by the area of the site. Area is a good but not perfect proxy for population size (species area relationship)

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-cap: "Thirty-eight percent of the variation in the mean population size is explained by area"
library(tidyverse)
library(metafor)
source("_common.R")
options(encoding="UTF-8")
#get the data
Area <- readRDS("C:/Users/matthew.grainger/Documents/Projects_in_development/Dragehode2023/data/Area.RDS")
lokalitetsestimater <- readRDS("C:/Users/matthew.grainger/Documents/Projects_in_development/Dragehode2023/data/derived_data/lokalitetsestimater.RDS")
lokalitetsdata <- readRDS("C:/Users/matthew.grainger/Documents/Projects_in_development/Dragehode2023/data/lokalitetsdata.RDS")

rds_combo <- list.files(path ="data/derived_data/direction_plots" , pattern = "*.RDS", full.names = TRUE ) %>%
  map_dfr(readRDS)


local=lokalitetsdata %>% 
  select(Region, Kommune, Lokalitet) %>% 
  rename(lokalitet=Lokalitet)
rds_combo=rds_combo %>% 
  left_join(
    .,local
  )

site_area<-rds_combo |> 
  distinct() |> 
  left_join(Area, by=c("lokalitet"="Lokalitet"))

sum_site_area<-site_area |> 
  group_by(lokalitet, Area, Region) |> 
  summarise(mn_pop=mean(nTot, na.rm = TRUE)) 

#summary(lm(log(mn_pop)~log(Area), data=sum_site_area))

sum_site_area|> 
  ggplot(aes(log(Area), log(mn_pop)))+
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq(ggpmisc::use_label(c("R2"))) +
  geom_point(colour="darkgreen")+
  geom_smooth(method = lm)+
  ggthemes::theme_base()+
  labs(x="log(Area)", y="log(mean population size)")

```

```{r}
#| echo: false
#| message: false
#| warning: false

popvekstdata <- readRDS(paste0(here::here(),"/data/derived_data/popvekstdata.RDS"))
#unweighted growth rate mean of site and mean of location
popvekstdata$Year=as.integer(popvekstdata[,2])
df <- popvekstdata[!is.infinite(popvekstdata$vekstrate),]
```

```{r}
#| echo: false
#| message: false
#| warning: false

df_lok <- plyr::ldply (lokalitetsestimater, data.frame)

join_df=df |> 
  left_join(df_lok, by=c("Lokalitet"="lokalitet"))

list_of_sites<-c("Spireodden", "Ekebergskr銅ingen", "Hoved顯a", 
"Hoved顯a V", "Horgen","Buss-stopp", "Nordre Ultvet", "Grindaker", "Lyngstad Vestre")

join_df<-
  join_df |> 
  filter(Lokalitet %in% list_of_sites) 


join_df<-join_df |> 
  inner_join(Area)

testmeta_2018=join_df |> 
  group_by(Lokalitet, Region) |> 
  filter(Year==2018) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE),
            meanArea=mean(Area, na.rm=TRUE)
            ) 
# |> 
 # filter(!Lokalitet=="Viernbukta")

testmeta_2019=join_df |> 
  group_by(Lokalitet, Region) |> 
  filter(Year==2019) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE),
            meanArea=mean(Area, na.rm=TRUE)
            ) #|> 
  #filter(!Lokalitet=="Viernbukta")

testmeta_2020=join_df |> 
  group_by(Lokalitet, Region) |> 
  filter(Year==2020) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE),
            meanArea=mean(Area, na.rm=TRUE)
            ) #|> 
  #filter(!Lokalitet=="Viernbukta")

testmeta_2021=join_df |> 
  group_by(Lokalitet, Region) |> 
  filter(Year==2021) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE),
            meanArea=mean(Area, na.rm=TRUE)
            ) #|> 
  #filter(!Lokalitet=="Viernbukta")

 testmeta_2022=join_df |> 
   group_by(Lokalitet, Region) |> 
   filter(Year==2022) |> 
   summarise(meanGR=mean(vekstrate, na.rm=TRUE),
             sdGR=sd(vekstrate, na.rm=TRUE),
             VARGR=var(vekstrate,na.rm = TRUE),
             meanTpop=mean(nTot, na.rm=TRUE),
             sdTpop=sd(nTot, na.rm=TRUE),
             VARTpop=var(nTot, na.rm=TRUE),
            meanArea=mean(Area, na.rm=TRUE)
             ) |> 
  # filter(!Lokalitet=="Viernbukta") |> 
   filter(!is.nan(meanGR))



res_2018 <- metafor::rma(meanGR, VARGR, weights=meanArea,slab=Lokalitet, data=testmeta_2018)
res_2019 <- metafor::rma(meanGR, VARGR, weights=meanArea,slab=Lokalitet, data=testmeta_2019)
res_2020 <- metafor::rma(meanGR, VARGR, weights=meanArea,slab=Lokalitet, data=testmeta_2020)
res_2021 <- metafor::rma(meanGR, VARGR, weights=meanArea,slab=Lokalitet, data=testmeta_2021)
res_2022 <- metafor::rma(meanGR, VARGR, weights=meanArea,slab=Lokalitet, data=testmeta_2022)



```

```{r}
#| echo: false
#| message: false
#| warning: false

#create dataframe

data<-data.frame(ES=c(res_2018$yi,
                                    res_2019$yi,
                                    res_2020$yi,
                                    res_2021$yi,
                      res_2022$yi), SE=c(sqrt(res_2018$vi),
                                                       sqrt(res_2019$vi),
                                                       sqrt(res_2020$vi),
                                                       sqrt(res_2021$vi),
                                         sqrt(res_2022$vi)), 
                       site=c(testmeta_2018$Lokalitet,
                              testmeta_2019$Lokalitet,
                              testmeta_2020$Lokalitet,
                              testmeta_2021$Lokalitet,
                              testmeta_2022$Lokalitet), 
                 year=c(rep(2018,length(res_2018$yi)),rep(2019,length(res_2019$yi)),rep(2020,length(res_2020$yi)),rep(2021,length(res_2021$yi)),rep(2022,length(res_2022$yi))),
                 type="site")
  
data2<-data.frame(ES=c(res_2018$b, res_2019$b, res_2020$b, res_2021$b, res_2022$b),
           SE=c(res_2018$se, res_2019$se, res_2020$se, res_2021$se, res_2022$se),
           year=c(2018,2019,2020,2021,2022),
           site="summary",
           type="summary")

data3<-rbind(data, data2)

data3 |> 
  filter(type=="summary") |> 
  ggplot(aes(year,y=log(ES),ymax=log(ES)+(1.96*log(SE)),ymin=log(ES)-(1.96*log(SE)) ))+
  geom_pointrange()+
  geom_hline(yintercept=0, lty=2,linewidth=1)+
  labs(x="Ar", y="Log vektet vekstrate (95% CI)")+
  theme_classic()+
  ggtitle("Vektet populasjonsvekstrate for alle populasjoner kombinert")


```

```{r}
#| echo: false
#| message: false
#| warning: false

res.H_2018 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Hadeland"), slab=Lokalitet, data=testmeta_2018)
res.H_2019 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Hadeland"), slab=Lokalitet, data=testmeta_2019)
res.H_2020 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Hadeland"), slab=Lokalitet, data=testmeta_2020)
res.H_2021 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Hadeland"), slab=Lokalitet, data=testmeta_2021)
res.H_2022 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Hadeland"), slab=Lokalitet, data=testmeta_2022)

#res.R_2018 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Region=="Ringerike"), slab=Lokalitet, data=testmeta_2018)
res.R_2019 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Ringerike"), slab=Lokalitet, data=testmeta_2019)
res.R_2020 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Ringerike"), slab=Lokalitet, data=testmeta_2020)
res.R_2021 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Ringerike"), slab=Lokalitet, data=testmeta_2021)
res.R_2022 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Ringerike"), slab=Lokalitet, data=testmeta_2022)

res.O_2018 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Oslo"), slab=Lokalitet, data=testmeta_2018)
res.O_2019 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Oslo"), slab=Lokalitet, data=testmeta_2019)
res.O_2020 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Oslo"), slab=Lokalitet, data=testmeta_2020)
res.O_2021 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Oslo"), slab=Lokalitet, data=testmeta_2021)
res.O_2022 <- rma(meanGR, VARGR, weights=meanArea,subset=(Region=="Oslo"), slab=Lokalitet, data=testmeta_2022)

dat.comp_2018 <- data.frame(estimate = c(coef(res.H_2018),coef(res.O_2018)), stderror = c(res.H_2018$se,res.O_2018$se),
                       meta = c("Hadeland", 
                                "Oslo"), tau2 = round(c(res.H_2018$tau2, 
                                                        res.O_2018$tau2),4))
out_2018=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_2018, digits=3)


dat.comp_2019 <- data.frame(estimate = c(coef(res.H_2019), coef(res.R_2019), coef(res.O_2019)), stderror = c(res.H_2019$se, res.R_2019$se, res.O_2019$se),
                       meta = c("Hadeland", "Ringerike", "Oslo"), tau2 = round(c(res.H_2019$tau2, res.R_2019$tau2, res.O_2019$tau2),4))

out_2019=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_2019, digits=3)

dat.comp_2020 <- data.frame(estimate = c(coef(res.H_2020), coef(res.R_2020), coef(res.O_2020)), stderror = c(res.H_2020$se, res.R_2020$se, res.O_2020$se),
                       meta = c("Hadeland", "Ringerike", "Oslo"), tau2 = round(c(res.H_2020$tau2, res.R_2020$tau2, res.O_2020$tau2),4))
out_2020=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_2020, digits=3)

dat.comp_2021 <- data.frame(estimate = c(coef(res.H_2021), coef(res.R_2021), coef(res.O_2021)), stderror = c(res.H_2021$se, res.R_2021$se, res.O_2021$se),
                       meta = c("Hadeland", "Ringerike", "Oslo"), tau2 = round(c(res.H_2021$tau2, res.R_2021$tau2, res.O_2021$tau2),4))
out_2021=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_2021, digits=3)

dat.comp_2022 <- data.frame(estimate = c(coef(res.H_2022), coef(res.R_2022), coef(res.O_2022)), stderror = c(res.H_2022$se, res.R_2022$se, res.O_2022$se),
                       meta = c("Hadeland", "Ringerike", "Oslo"), tau2 = round(c(res.H_2022$tau2, res.R_2022$tau2, res.O_2022$tau2),4))
out_2022=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_2022, digits=3)

out18<-c(0.900000,NA, 1.818935)
out18_vi<-c(0.4551724,NA, 0.2670713)
out18meta<-c("Hadeland", "Ringerike" ,"Oslo" )
R_data<-rbind(data.frame(ES=c(out18,out_2019$yi,out_2020$yi,out_2021$yi, out_2022$yi),
                         SE=c(sqrt(out18_vi),sqrt(out_2019$vi),sqrt(out_2020$vi),sqrt(out_2021$vi),sqrt(out_2022$vi)), type="Region", site=c(out18meta, dat.comp_2019$meta, dat.comp_2020$meta, dat.comp_2021$meta, dat.comp_2022$meta), year=c(2018,2018,2018,2019,2019,2019,2020,2020,2020,2021,2021,2021,2022,2022,2022)), data.frame(ES=c(c(0.9,NA ,0.9189348), out_2019$b,out_2020$b, out_2021$b, out_2022$b),SE=c(0.6746647,NA, 0.8498492, out_2019$se, out_2020$se, out_2021$se, out_2022$se),type="summary",site="summary", year=c(2018,2018,2018,2019,2019,2019,2020,2020,2020,2021,2021,2021,2022,2022,2022)))

R_data|> 
  filter(!type=="summary") |> 
  mutate(year2=year+c(0,0.2,0.4)) |> 
  ggplot(aes(year2,y=log(ES),ymax=log(ES)+(1.96*log(SE)),ymin=log(ES)-(1.96*log(SE)), group=site, colour=site ))+
  geom_pointrange()+
  scale_colour_manual("Region",values=c("#E69F00", "#56B4E9", "#009E73"))+
  geom_hline(yintercept=0, lty=2,linewidth=1)+
  labs(x="Ar", y="Log vektet vekstrate (95% CI)")+
  theme_classic()+
  ggtitle("Vektet populasjonsvekstrate for hver region")




```

```{r}
#| echo: false
#| message: false
#| warning: false
testmeta2_2018=join_df |> 
  group_by(Lokalitet, Hovednaturtype ) |> 
  filter(Year==2018) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE)
            ) #|> 
  #filter(!Lokalitet=="Viernbukta")


testmeta2_2019=join_df |> 
  group_by(Lokalitet, Hovednaturtype ) |> 
  filter(Year==2019) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE)
            ) #|> 
  #filter(!Lokalitet=="Viernbukta")


testmeta2_2020=join_df |> 
  group_by(Lokalitet, Hovednaturtype ) |> 
  filter(Year==2020) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE)
            ) #|> 
  #filter(!Lokalitet=="Viernbukta")


testmeta2_2021=join_df |> 
  group_by(Lokalitet, Hovednaturtype ) |> 
  filter(Year==2021) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE)
            ) #|> 
  #filter(!Lokalitet=="Viernbukta")

testmeta2_2022=join_df |> 
  group_by(Lokalitet, Hovednaturtype ) |> 
  filter(Year==2022) |> 
  summarise(meanGR=mean(vekstrate, na.rm=TRUE),
            sdGR=sd(vekstrate, na.rm=TRUE),
            VARGR=var(vekstrate,na.rm = TRUE),
            meanTpop=mean(nTot, na.rm=TRUE),
            sdTpop=sd(nTot, na.rm=TRUE),
            VARTpop=var(nTot, na.rm=TRUE)
            ) |> 
  #filter(!Lokalitet=="Viernbukta") |> 
   filter(!is.nan(meanGR))

res2_2018 <- metafor::rma(meanGR, VARGR, weights=meanTpop,slab=Lokalitet, data=testmeta2_2018)
res2_2019 <- metafor::rma(meanGR, VARGR, weights=meanTpop,slab=Lokalitet, data=testmeta2_2019)
res2_2020 <- metafor::rma(meanGR, VARGR, weights=meanTpop,slab=Lokalitet, data=testmeta2_2020)
res2_2021 <- metafor::rma(meanGR, VARGR, weights=meanTpop,slab=Lokalitet, data=testmeta2_2021)
res2_2022 <- metafor::rma(meanGR, VARGR, weights=meanTpop,slab=Lokalitet, data=testmeta2_2022)

res.T32_2018 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T32"), slab=Lokalitet, data=testmeta2_2018)
res.T32_2019 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T32"), slab=Lokalitet, data=testmeta2_2019)
res.T32_2020 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T32"), slab=Lokalitet, data=testmeta2_2020)
res.T32_2021 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T32"), slab=Lokalitet, data=testmeta2_2021)
res.T32_2022 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T32"), slab=Lokalitet, data=testmeta2_2022)

res.T2_2018 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T2"), slab=Lokalitet, data=testmeta2_2018)

res.T2_2019 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T2"), slab=Lokalitet, data=testmeta2_2019)

res.T2_2020 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T2"), slab=Lokalitet, data=testmeta2_2020)

res.T2_2021 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T2"), slab=Lokalitet, data=testmeta2_2021)
res.T2_2022 <- rma(meanGR, VARGR, weights=meanTpop,subset=(Hovednaturtype=="T2"), slab=Lokalitet, data=testmeta2_2021)

dat.comp_R_2018 <- data.frame(estimate = c(coef(res.T32_2018), coef(res.T2_2018)), stderror = c(res.T32_2018$se, res.T2_2018$se),
                       meta = c("T32", "T2"), tau2 = round(c(res.T32_2018$tau2, res.T2_2018$tau2),4))

out_R_2018=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_R_2018, digits=3)

dat.comp_R_2019 <- data.frame(estimate = c(coef(res.T32_2019), coef(res.T2_2019)), stderror = c(res.T32_2019$se, res.T2_2019$se),
                       meta = c("T32", "T2"), tau2 = round(c(res.T32_2019$tau2, res.T2_2019$tau2),4))

out_R_2019=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_R_2019, digits=3)

dat.comp_R_2020 <- data.frame(estimate = c(coef(res.T32_2020), coef(res.T2_2020)), stderror = c(res.T32_2020$se, res.T2_2020$se),
                       meta = c("T32", "T2"), tau2 = round(c(res.T32_2020$tau2, res.T2_2020$tau2),4))

out_R_2020=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_R_2020, digits=3)
dat.comp_R_2021 <- data.frame(estimate = c(coef(res.T32_2021), coef(res.T2_2021)), stderror = c(res.T32_2021$se, res.T2_2021$se),
                       meta = c("T32", "T2"), tau2 = round(c(res.T32_2021$tau2, res.T2_2021$tau2),4))

out_R_2021=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_R_2021, digits=3)

dat.comp_R_2022 <- data.frame(estimate = c(coef(res.T32_2022), coef(res.T2_2022)), stderror = c(res.T32_2022$se, res.T2_2022$se),
                       meta = c("T32", "T2"), tau2 = round(c(res.T32_2022$tau2, res.T2_2022$tau2),4))

out_R_2022=rma(estimate, sei=stderror, mods = ~ meta, method="FE", data=dat.comp_R_2022, digits=3)


#forest(out)
RNT_data<-rbind(data.frame(ES=c(out_R_2018$yi, out_R_2019$yi,
                                out_R_2020$yi,out_R_2021$yi,out_R_2022$yi),
                           SE=c(sqrt(out_R_2018$vi),sqrt(out_R_2019$vi),
                                sqrt(out_R_2020$vi),sqrt(out_R_2021$vi),sqrt(out_R_2022$vi)),
                           type="NaturType",
                           site=c(dat.comp_R_2018$meta,dat.comp_R_2019$meta,
                                  dat.comp_R_2020$meta,dat.comp_R_2021$meta, dat.comp_R_2022$meta),
                           year=rep(c(2018,2019,2020,2021,2022), each=2)),
                    data.frame(ES=c(out_R_2018$b,
                                    out_R_2019$b,
                                    out_R_2020$b,
                                    out_R_2021$b,
                                    out_R_2022$b),
                               SE=c(out_R_2018$se,
                                    out_R_2019$se,
                                    out_R_2020$se,
                                    out_R_2021$se,
                                    out_R_2022$se),type="Summary",site="Summary",
                                year=rep(c(2018,2019,2020,2021,2022), each=2)))






RNT_data|> 
  filter(!type=="Summary") |> 
  filter(!site=="Summary") |> 
  mutate(year2=year+c(0,0.2)) |> 
  ggplot(aes(year2,y=log(ES),ymax=log(ES)+(1.96*log(SE)),ymin=log(ES)-(1.96*log(SE)), group=site, colour=site ))+
  geom_pointrange()+
  scale_colour_manual("naturtype",values=c("darkred", "darkgreen"))+
  geom_hline(yintercept=0, lty=2,linewidth=1)+
  labs(x="Ar", y="Log vektet vekstrate (95% CI)")+
  theme_classic()+
  ggtitle("Vektet populasjonsvekstrate for hver naturtype")



```
