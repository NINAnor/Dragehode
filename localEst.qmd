---
editor: visual
lang: no
fontenc: iso-8859-1
---

# Lokale estimater av populasjonsstørrelse {#sec-local}

Disse figurene viser estimert populasjonsstørrelse, totalt og fordelt på de tre størrelsesklassene fertile, vegetative og småplanter, for hvert år i de 25 lokalitetene som inngår i overvåkingen.

Populasjonsstørrelse er estimert ved å bruke tettheten av individer i overvåkingsrutene, samt arealet dragehode forekommer på (registrert i forekomstruter langs transekter) innenfor lokaliteten. Usikkerheten i populasjonsestimatene ble beregnet ved tilfeldige trekninger av forekomstruter og overvåkingsruter (‘bootstrapping’) med 2000 gjentak. Bootstrapping er en re-samplingsmetode som gjør det mulig å beregne usikkerhet rundt en gjennomsnittsverdi. Strekene viser gjennomsnittsverdi, mens de skraverte feltene viser 95 % konfidensintervaller.

```{r}
#| echo: false
#| message: false
#| warning: false

library(tidyverse)

lokalitetsestimater <- readRDS(paste0(here::here(), "/data/derived_data/lokalitetsestimater.RDS"))

plotLocEst<-function(i){
  


title=lokalitetsestimater[[i]]$lokalitet
popstr=as_tibble(lokalitetsestimater[[i]])
names(popstr)<-c( "lokalitet" ,"year",      "Fertile",     "Vegetative",      "Småplanter",      "Totalt",     
                    "Fert.CI",   "Veg.CI",    "Sma.CI",    "Tot.CI" )
  
  
popstrCI=popstr %>% 
    mutate("Fert.CI_upper"= Fert.CI[,2]) %>% 
    mutate("Fert.CI_lower"= Fert.CI[,1]) %>% 
    mutate("Tot.CI_upper"= Tot.CI[,2]) %>% 
    mutate("Tot.CI_lower"= Tot.CI[,1]) %>%
    mutate("Veg.CI_upper"= Veg.CI[,2]) %>% 
    mutate("Veg.CI_lower"= Veg.CI[,1]) %>%
    mutate("Sma.CI_upper"= Sma.CI[,2]) %>% 
    mutate("Sma.CI_lower"= Sma.CI[,1]) %>%
    select(!lokalitet) %>% 
    pivot_longer(!year, names_to = "key", values_to = "value") %>% 
    filter(key%in% c("Fert.CI", "Veg.CI","Sma.CI", "Tot.CI")) %>% 
    mutate(var=gsub(".CI","", key))
  
  popstrCI=popstrCI%>% 
    mutate(var=rep(c("Fertile", "Vegetative", "Småplanter", "Totalt"),(dim(popstrCI)[1]/4))) %>% 
    mutate(upper=value[,2]) %>% 
    mutate(lower=value[,1]) %>% 
    select(!value)
    
  
  
popstr_plot=popstr %>% 
    mutate("Fert.CI_upper"= Fert.CI[,2]) %>% 
    mutate("Fert.CI_lower"= Fert.CI[,1]) %>% 
    mutate("Tot.CI_upper"= Tot.CI[,2]) %>% 
    mutate("Tot.CI_lower"= Tot.CI[,1]) %>%
    mutate("Veg.CI_upper"= Veg.CI[,2]) %>% 
    mutate("Veg.CI_lower"= Veg.CI[,1]) %>%
    mutate("Sma.CI_upper"= Sma.CI[,2]) %>% 
    mutate("Sma.CI_lower"= Sma.CI[,1]) %>%
    select(!lokalitet) %>% 
    pivot_longer(!year, names_to = "key", values_to = "value") %>%
    #filter(!key%in% c("Fert.CI", "Veg.CI","Sma.CI", "Tot.CI")) %>% 
    filter(key%in% c("Fertile", "Småplanter", "Totalt", "Vegetative")) %>% 
    mutate(upper=popstrCI$upper) %>% 
    mutate(lower=popstrCI$lower)
  
p=popstr_plot%>% 
    ggplot(aes(year,value[,1], colour=key))+
    geom_point(size=2)+
    geom_ribbon(aes(ymin=lower, ymax=upper, fill=key), alpha=0.2)+
    scale_fill_manual(values = c("darkred", "darkblue", "darkgrey", "darkgreen"), guide="none")+
    geom_line( size=1.2)+
   scale_colour_manual(values = c("darkred", "darkblue", "darkgrey", "darkgreen"))+
    labs(x="År", y= "Antall individer")+
    ggtitle(title)+
    theme_classic()

p
}

```
### this one needs to be updated to include all populations (now only 1-26) - but could we also remove those with only data from transects in 2023 (12 of the 15 new ones - they don't need to take up space. 
### I wonder if we could also structure the order of the plots differently, so that we have region subtitles, and all localities belonging to that region together, would be easier to read. 
### also I wander why confidence intervals are not calculated for the three new localities? Brone, Dampsaga, Røyse. 

```{r}
#| echo: false
#| message: false
#| warning: false

plotLocEst(i=1)
plotLocEst(i=2)
plotLocEst(i=3)
plotLocEst(i=4)
plotLocEst(i=5)
plotLocEst(i=6)
plotLocEst(i=7)
plotLocEst(i=8)
plotLocEst(i=9)
plotLocEst(i=10)
plotLocEst(i=11)
plotLocEst(i=12)
plotLocEst(i=13)
plotLocEst(i=14)
plotLocEst(i=15)
plotLocEst(i=16)
plotLocEst(i=17)
plotLocEst(i=18)
plotLocEst(i=19)
plotLocEst(i=20)
plotLocEst(i=21)
plotLocEst(i=22)
plotLocEst(i=23)
plotLocEst(i=24)
#plotLocEst(i=25)
plotLocEst(i=26)


```
